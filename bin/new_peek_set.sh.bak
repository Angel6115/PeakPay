#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<'EOF'
Crea un set nuevo para PeekPay con estructura y archivos base.

USO:
  new_peek_set.sh --cat <categoria> --creator <slug-creador> [--set <slug-set>]
                  [--full <ruta_full_img>] [--cover <ruta_cover_img>]

ARGUMENTOS:
  --cat       Categoría (arte, fitness, cosplay, lenceria, artistico, etc.)
  --creator   Slug del creador (p.ej. ink-aria)
  --set       Slug del set (default: set-01)
  --full      Imagen base para mosaico (JPG/PNG/WebP). Si solo pasas esta, también se usa para cover.
  --cover     Imagen de portada (opcional). Si no la pasas, se genera desde --full.

DETALLES:
  - Crea: public/photos/<cat>/<creator>/sets/<set>/
  - Genera: full.jpg, cover.jpg y (si tienes cwebp) full.webp/cover.webp.
  - Requiere macOS con 'sips'. Si tienes 'cwebp', también hace WebP.
EOF
  exit 1
}

CAT=""; CREATOR=""; SET_SLUG="set-01"; FULL_SRC=""; COVER_SRC=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    --cat) CAT="${2:-}"; shift 2 ;;
    --creator) CREATOR="${2:-}"; shift 2 ;;
    --set) SET_SLUG="${2:-}"; shift 2 ;;
    --full) FULL_SRC="${2:-}"; shift 2 ;;
    --cover) COVER_SRC="${2:-}"; shift 2 ;;
    -h|--help) usage ;;
    *) echo "Flag no reconocido: $1"; usage ;;
  esac
done

[[ -z "$CAT" || -z "$CREATOR" ]] && usage

TARGET_DIR="public/photos/${CAT}/${CREATOR}/sets/${SET_SLUG}"
mkdir -p "$TARGET_DIR"
echo "➡️  Destino: $TARGET_DIR"

have() { command -v "$1" >/dev/null 2>&1; }

to_jpg() {
  local src="$1" dst="$2"
  if have sips; then
    sips -s format jpeg "$src" --out "$dst" >/dev/null
  else
    echo "❌ Falta 'sips' (macOS). No pude convertir $src a JPG."
    exit 1
  fi
}

mk_webp() {
  local src="$1" dst="$2"
  if have cwebp; then
    cwebp -quiet "$src" -o "$dst"
  else
    echo "⚠️  cwebp no instalado; omitimos ${dst##*/}"
  fi
}

resize_cover_like() {
  local src="$1" dst="$2"
  if have sips; then
    sips -Z 1200 "$src" --out "$dst" >/dev/null
  else
    cp -f "$src" "$dst"
  fi
}

# full.jpg
if [[ -n "$FULL_SRC" ]]; then
  if printf '%s\n' "$FULL_SRC" | tr '[:upper:]' '[:lower:]' | grep -qE '\.jpe?g$'; then
    cp -f "$FULL_SRC" "${TARGET_DIR}/full.jpg"
  else
    echo "🖼  Convirtiendo FULL a JPG…"
    to_jpg "$FULL_SRC" "${TARGET_DIR}/full.jpg"
  fi
else
  echo "❗ No pasaste --full. Creando placeholder."
  if have convert; then
    convert -size 1600x1600 xc:white "${TARGET_DIR}/full.jpg"
  else
    sips -s format jpeg /System/Library/CoreServices/DefaultDesktop.jpg --out "${TARGET_DIR}/full.jpg" >/dev/null 2>&1 || true
  fi
fi

# cover.jpg
if [[ -n "$COVER_SRC" ]]; then
  if printf '%s\n' "$COVER_SRC" | tr '[:upper:]' '[:lower:]' | grep -qE '\.jpe?g$'; then
    cp -f "$COVER_SRC" "${TARGET_DIR}/cover.jpg"
  else
    echo "🖼  Convirtiendo COVER a JPG…"
    to_jpg "$COVER_SRC" "${TARGET_DIR}/cover.jpg"
  fi
else
  echo "🎯 Generando cover desde full.jpg…"
  resize_cover_like "${TARGET_DIR}/full.jpg" "${TARGET_DIR}/cover.jpg"
fi

# WebP opcional
mk_webp "${TARGET_DIR}/full.jpg"  "${TARGET_DIR}/full.webp"  || true
mk_webp "${TARGET_DIR}/cover.jpg" "${TARGET_DIR}/cover.webp" || true

echo "✅ Archivos creados:"
ls -lh "${TARGET_DIR}/" | sed 's/^/   /'

echo
echo "🔎 Prueba local:"
echo "  http://localhost:5173/public/peek.html?cat=${CAT}&creator=${CREATOR}&s=${SET_SLUG}"
echo
echo "📦 Commit (opcional):"
echo "  git add '${TARGET_DIR}' && git commit -m 'chore: nuevo set ${CAT}/${CREATOR}/${SET_SLUG}'"
